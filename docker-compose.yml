version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: llmchatlinker/Dockerfile
    # expose:
    #   - "${API_PORT}"
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    network_mode: "host"

  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGHOST: ${POSTGRES_HOST}
      PGPORT: ${POSTGRES_PORT}
    expose:
      - "${POSTGRES_PORT}"
    ports:
      # - "${POSTGRES_PORT}:5432"
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}" , "-d", "${POSTGRES_DB}", "-p", "${POSTGRES_PORT}"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: -p ${POSTGRES_PORT}

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_NODE_PORT: ${RABBITMQ_PORT}
    expose:
      - "${RABBITMQ_PORT}"
    ports:
      # - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
      # - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    env_file:
      - .env
    # volumes:
    #   - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10

  frontend:
    build:
      context: ./llmchatlinker-frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:80"
    env_file:
      - .env